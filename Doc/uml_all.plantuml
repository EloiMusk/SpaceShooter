@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class Alien {
  + Alien(): 
  + Alien(int): 
  - animation(): void
  + isHit(): void
  + act(): void
  + spawnUpgrade(): void
}
class Ammunition {
  + Ammunition(): 
  + act(): void
  - animate(): void
}
class Bullet {
  + Bullet(): 
  + act(): void
  - checkSurroundings(): void
  - animation(): void
}
enum GameState << enumeration >> {
  + GameState(): 
  + values(): GameState[]
  + valueOf(String): GameState
}
class Menu {
  + Menu(): 
  + Menu(GameState): 
}
class Space {
  + Space(): 
  + refreshGameStats(): void
  + gameOver(): void
  + act(): void
  + gemerateAmmunition(): void
  - runAnimationTimer(): void
  + addScore(int): void
  + startGame(): void
  - generateBackground(): void
}
class SpaceShip {
  + SpaceShip(): 
  + isHitByUpgrade(): void
  - animation(): void
  + controls(): void
  + isHit(): void
  + act(): void
  - coolDown(): void
}
class Star {
  + Star(): 
  + Star(int): 
  - animation(): void
  + act(): void
}
class UI {
  + UI(): 
  - getHealthImage(int): GreenfootImage
  - getShieldImage(int): GreenfootImage
  + act(): void
  - getAmmunitionImage(int): GreenfootImage
  + refreshUI(): void
}
class Upgrade {
  + Upgrade(): 
  + Upgrade(UpgradeType): 
  - animate(): void
  + act(): void
}
enum UpgradeType << enumeration >> {
  + UpgradeType(): 
  + values(): UpgradeType[]
  + valueOf(String): UpgradeType
}

Alien        -[#595959,dashed]->  Upgrade     : "«create»"
Space        -[#595959,dashed]->  Alien       : "«create»"
Space        -[#595959,dashed]->  Ammunition  : "«create»"
Space        -[#595959,dashed]->  Menu        : "«create»"
Space        -[#595959,dashed]->  SpaceShip   : "«create»"
Space        -[#595959,dashed]->  Star        : "«create»"
Space        -[#595959,dashed]->  UI          : "«create»"
SpaceShip    -[#595959,dashed]->  Bullet      : "«create»"
Upgrade     "1" *-[#595959,plain]-> "upgradeType\n1" UpgradeType 
@enduml
